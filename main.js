(()=>{"use strict";var e={169:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(537),a=n.n(r),o=n(645),i=n.n(o)()(a());i.push([e.id,".home-panel{height:70%;width:100%;display:flex;background-color:#1a1717}.home-panel .img-panel{width:60%;height:100%}.home-panel .img-panel #home-image{object-fit:cover;width:100%;height:100%}.home-panel .text-banner{margin:1rem;display:flex;flex-direction:column;color:white;width:50%;height:100%;justify-content:space-evenly;align-items:center}.home-panel .text-banner #big-header{font-size:clamp(16pt, 7vw, 64pt)}.home-panel .text-banner #small-header,.home-panel .text-banner #small-header2{font-size:clamp(16pt, 1.5rem, 24pt)}.top-panel{background-color:#1a1717;color:#fff;position:fixed;width:100%;display:flex}.top-panel #restaurant-name{margin:1rem;font-size:3rem}.top-panel .nav-bar button{height:100%;background-color:#1a1717;color:#fff;border:1px solid rgba(255,255,255,0.414);padding:1rem}*{margin:0}body{width:100vw;height:100vh;background-color:white;font-size:16pt}#content{width:100%;height:100%}.content-panel{display:flex;width:100%;height:100%;border:2px solid white;justify-content:center;align-items:center}\n","",{version:3,sources:["webpack://./src/home.scss","webpack://./src/nav.scss","webpack://./src/main.scss"],names:[],mappings:"AAMC,YACG,UAAU,CACV,UAAU,CACV,YAAY,CACR,wBATiB,CAKxB,uBAMO,SAAU,CACV,WAAY,CAPnB,mCAWW,gBAAiB,CACjB,UAAW,CACX,WAAY,CAbvB,yBAkBO,WAAW,CACX,YAAa,CACb,qBAAsB,CACtB,WAAY,CACZ,SAAU,CACV,WAAY,CACZ,4BAA6B,CAC7B,kBAAmB,CAzB1B,qCA4BW,gCAA+B,CA5B1C,+EAiCW,mCAAoC,CACvC,WCpCL,wBDHqB,CCIrB,UCJY,CDKZ,cAAc,CACd,UAAU,CACV,YAAY,CALhB,4BAQQ,WAAW,CACX,cAAc,CATtB,2BAaY,WAAW,CACX,wBDhBa,CCiBb,UCjBI,CDkBJ,wCAA2C,CAC3C,YAAY,CCbxB,EACI,QAAQ,CACX,KAGD,WAAW,CACX,YAAY,CACZ,sBAAuB,CACvB,cAAc,CACb,SAGG,UAAU,CACV,WAAW,CACd,eAEG,YAAY,CACZ,UAAU,CACV,WAAW,CACX,sBAAsB,CACtB,sBAAuB,CACvB,kBAAmB",sourcesContent:["\r\n $bgColor:rgb(26, 23, 23);\r\n\r\n\r\n\r\n\r\n .home-panel{\r\n    height:70%;\r\n    width:100%;\r\n    display:flex;\r\n        background-color: $bgColor;\r\n    .img-panel {\r\n        width: 60%;\r\n        height: 100%;\r\n    \r\n    \r\n        #home-image {\r\n            object-fit: cover;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n    }\r\n\r\n    .text-banner {\r\n        margin:1rem;\r\n        display: flex;\r\n        flex-direction: column;\r\n        color: white;\r\n        width: 50%;\r\n        height: 100%;\r\n        justify-content: space-evenly;\r\n        align-items: center;\r\n    \r\n        #big-header {\r\n            font-size: clamp(16pt,7vw,64pt);\r\n        }\r\n        \r\n        #small-header,\r\n        #small-header2 {\r\n            font-size: clamp(16pt, 1.5rem, 24pt);\r\n        }\r\n    }\r\n }\r\n\r\n","$navBG:rgb(24, 15, 15);\r\n\r\n\r\n.top-panel{\r\n    background-color:$bgColor;\r\n    color:$fontColor;\r\n    position:fixed;\r\n    width:100%;\r\n    display:flex;\r\n\r\n    #restaurant-name{\r\n        margin:1rem;\r\n        font-size:3rem;\r\n    }\r\n    .nav-bar{\r\n        button{\r\n            height:100%;\r\n            background-color: $bgColor;\r\n            color:$fontColor;\r\n            border:1px solid rgba(255, 255, 255, 0.414);\r\n            padding:1rem;\r\n        }\r\n    }\r\n}",' $bgColor: rgb(26, 23, 23);\r\n$fontColor:white;\r\n\r\n\r\n@import "home";\r\n@import "nav";\r\n\r\n*{\r\n    margin:0;\r\n}\r\n\r\nbody{\r\nwidth:100vw;\r\nheight:100vh;\r\nbackground-color: white;\r\nfont-size:16pt;\r\n}\r\n#content{\r\n    \r\n    width:100%;\r\n    height:100%;\r\n}\r\n.content-panel{\r\n    display:flex;\r\n    width:100%;\r\n    height:100%;\r\n    border:2px solid white;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n'],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},i=[],s=0;s<e.length;s++){var c=e[s],d=r.base?c[0]+r.base:c[0],l=o[d]||0,p="".concat(d," ").concat(l);o[d]=l+1;var u=n(p),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(h);else{var m=a(h,r);r.byIndex=s,t.splice(s,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=n(o[i]);t[s].references--}for(var c=r(e,a),d=0;d<o.length;d++){var l=n(o[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}o=c}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0,(()=>{const e=n.p+"b5169f2820443df384b2.png",t=t=>{const n=document.createElement("div");n.classList.add("home-panel");const r=document.createElement("div");r.classList.add("img-panel");const a=document.createElement("h2");a.textContent="La Cucina",a.id="big-header";const o=document.createElement("h2");o.textContent="Savor the taste of italy in every dish";const i=document.createElement("h2");i.textContent="Experience the delicious and wholesome flavors of italy, brought to your plate with locally sourced, fresh ingredients.",o.id="small-header",i.id="small-header2";const s=new Image;s.id="home-image",s.src=e,r.appendChild(s);const c=document.createElement("div");c.classList.add("text-banner"),c.appendChild(a),c.appendChild(o),c.appendChild(i),n.appendChild(r),n.appendChild(c),t.appendChild(n)},r=(e,t,n)=>{document.querySelector("content-panel");const r=document.createElement("div");r.classList.add("menu-item");const a=document.createElement("h1");a.classList.add("dish-name");const o=document.createElement("p");o.classList.add("dish-desc"),a.textContent=t,o.textContent=n,r.appendChild(a),r.appendChild(o),e.appendChild(r)};var a=n(379),o=n.n(a),i=n(795),s=n.n(i),c=n(569),d=n.n(c),l=n(565),p=n.n(l),u=n(216),h=n.n(u),m=n(589),f=n.n(m),C=n(169),A={};A.styleTagTransform=f(),A.setAttributes=p(),A.insert=d().bind(null,"head"),A.domAPI=s(),A.insertStyleElement=h(),o()(C.Z,A),C.Z&&C.Z.locals&&C.Z.locals;const g=e=>e.innerHTML="";console.log("boy"),(()=>{const e=document.querySelector("#content");console.log("suh");const t=document.createElement("div");t.classList.add("top-panel");const n=document.createElement("h1");n.id="restaurant-name",n.textContent="Restaurant Name",t.appendChild(n);const r=document.createElement("div");r.classList.add("nav-bar");const a=document.createElement("button");a.classList.add("nav-button"),a.id="menu-button",a.textContent="Menu",r.appendChild(a);const o=document.createElement("button");o.classList.add("nav-button"),o.id="story-button",o.textContent="Our Story",r.appendChild(o);const i=document.createElement("button");i.classList.add("nav-button"),i.id="home-button",i.textContent="Home",r.appendChild(i),t.appendChild(r);const s=document.createElement("div");s.classList.add("content-panel"),e.appendChild(t),e.appendChild(s),document.body.appendChild(e)})();const v=document.querySelector(".content-panel");t(v);const b=document.querySelector("#menu-button"),y=document.querySelector("#story-button"),w=document.querySelector("#home-button");y.addEventListener("click",(()=>{g(v),(e=>{const t=document.createElement("h1");t.classList.add("story-head"),t.textContent="Our Story";const n=document.createElement("p");n.classList.add("story-body"),n.textContent="Welcome to La Cucina, a farm-to-table Italian restaurant that has been a local favorite for over a decade. La Cucina was founded by Maria and Giovanni, a husband and wife team who shared a passion for traditional Italian cuisine and a commitment to using the freshest, highest-quality ingredients available. Maria grew up in Italy and learned to cook from her grandmother, who taught her the importance of using simple, seasonal ingredients to create delicious, authentic meals. Giovanni, on the other hand, grew up on a farm and developed a deep appreciation for the hard work and dedication that goes into growing and harvesting fresh produce.Together, Maria and Giovanni opened La Cucina with the goal of bringing a taste of Italy to their community while supporting local farmers and producers. They work closely with a network of small-scale farmers and artisanal producers to source the freshest, most flavorful ingredients possible, from heirloom tomatoes to hand-crafted cheeses. At La Cucina, every dish is made from scratch and cooked with care, using traditional Italian techniques and recipes passed down through generations. From handmade pastas to slow-cooked ragus, every bite is a celebration of Italy's rich culinary heritage. We invite you to join us at La Cucina and taste the difference that fresh, local ingredients can make. Our commitment toquality and sustainability is at the heart of everything we do, and we look forward to sharing our passion for Italian cuisine with you.",e.appendChild(t),e.appendChild(n)})(v)})),w.addEventListener("click",(()=>{g(v),t(v)})),b.addEventListener("click",(()=>{g(v),(e=>{const t=document.createElement("div");t.classList.add("menu-frame"),r(t,"Pasta Primavera","Fresh seasonal vegetables sautéed in garlic and olive oil, served over linguine pasta."),r(t,"Spaghetti Carbonara","Traditional pasta dish made with creamy egg sauce, crispy pancetta, and Parmesan cheese."),r(t,"Margherita Pizza","Classic Neapolitan pizza with San Marzano tomatoes, fresh mozzarella, and basil."),r(t,"Caprese Salad","Fresh mozzarella, ripe tomatoes, and fragrant basil drizzled with extra-virgin olive oil and balsamic glaze."),r(t,"Osso Buco","Braised veal shank in a rich tomato-based sauce served with creamy polenta."),r(t,"Chicken Marsala","Sautéed chicken breasts in a flavorful Marsala wine sauce with mushrooms and garlic."),r(t,"Tiramisu","Classic Italian dessert made with layers of coffee-soaked ladyfingers, mascarpone cream, and cocoa powder."),e.appendChild(t)})(v)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,